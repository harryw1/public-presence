<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" 
     xmlns:content="http://purl.org/rss/1.0/modules/content/"
     xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Public Presence</title>
    <link>https://publicpresence.org</link>
    <description>Personal blog focused on sustainability science, public planning, policy, and public transportation</description>
    <language>en-us</language>
    <lastBuildDate>Fri, 31 Oct 2025 01:22:56 GMT</lastBuildDate>
    <atom:link href="https://publicpresence.org/rss.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Your Post Title Here</title>
      <link>https://publicpresence.org/blog/POST_TEMPLATE</link>
      <guid isPermaLink="true">https://publicpresence.org/blog/POST_TEMPLATE</guid>
      <pubDate>Invalid Date</pubDate>
      <description>A brief 1-2 sentence description of your post that will appear in blog listings and search results. Keep it concise and compelling.</description>
      <content:encoded><![CDATA[
# Your Post Title Here

Your introduction paragraph goes here. This should hook the reader and provide context for what you'll be discussing.

## Main Section Heading

Your content goes here. You can use all standard Markdown features:

### Subsection

- Bullet points
- Like this
- Are supported

1. Numbered lists
2. Also work
3. Just fine

**Bold text** and *italic text* are available.

## Code Examples

Inline code: `variable_name` or `function_call()`

Code blocks with syntax highlighting:

```python
def example_function(parameter):
    """
    Docstring explaining what the function does.
    """
    result = parameter * 2
    return result

# Usage
output = example_function(21)
print(f"The answer is: {output}")
```

```javascript
// JavaScript example
function calculateTotal(items) {
    return items.reduce((sum, item) => sum + item.price, 0);
}

const items = [
    { name: 'Item 1', price: 10 },
    { name: 'Item 2', price: 20 }
];

console.log(`Total: $${calculateTotal(items)}`);
```

## Mathematical Equations

Inline math: $E = mc^2$ or $x = \frac{-b \pm \sqrt{b^2 - 4ac}}{2a}$

Block math equations:

$$
\text{Total Emissions} = \sum_{i=1}^{n} (\text{Activity Data}_i \times \text{Emission Factor}_i)
$$

More complex equation:

$$
\frac{\partial f}{\partial x} = \lim_{h \to 0} \frac{f(x+h) - f(x)}{h}
$$

## Tables

| Category | Description | Value |
|----------|-------------|-------|
| Scope 1 | Direct emissions | 1,234 |
| Scope 2 | Purchased energy | 5,678 |
| Scope 3 | Indirect emissions | 9,012 |

## Images

To add images, place them in the `public/images/` directory and reference them:

![Alt text description](/images/your-image.jpg)

## Blockquotes

> This is a blockquote. It's useful for highlighting important information, quotes from other sources, or callout boxes.
>
> Blockquotes can span multiple paragraphs.

## Links

[Link text](https://example.com)

Or reference-style links:

[Link text][1]

[1]: https://example.com "Optional title"

## Lists with Nested Items

1. First item
   - Nested bullet
   - Another nested bullet
2. Second item
   - More nesting
     - Even deeper nesting
3. Third item

## Horizontal Rules

Use three or more hyphens, asterisks, or underscores:

---

## Key Takeaways

Summarize the main points of your post:

1. First key point
2. Second key point
3. Third key point

## Conclusion

Wrap up your post with a conclusion that ties everything together and provides clear takeaways or next steps for readers.

---

*Optional: Add a note, disclaimer, or call to action at the end of your post.*

## Further Reading

- [Related Resource 1](https://example.com)
- [Related Resource 2](https://example.com)
- [Related Resource 3](https://example.com)
]]></content:encoded>
      <category>tag1</category>
      <category>tag2</category>
      <category>tag3</category>
    </item>

    <item>
      <title>Understanding Scope 1, 2, and 3 Emissions in Public Sector Accounting</title>
      <link>https://publicpresence.org/blog/understanding-scope-emissions</link>
      <guid isPermaLink="true">https://publicpresence.org/blog/understanding-scope-emissions</guid>
      <pubDate>Mon, 20 Jan 2025 00:00:00 GMT</pubDate>
      <description>A comprehensive look at how public sector organizations categorize and measure greenhouse gas emissions across different scopes.</description>
      <content:encoded><![CDATA[
# Understanding Scope 1, 2, and 3 Emissions in Public Sector Accounting

When public sector organizations commit to reducing their greenhouse gas emissions, one of the first challenges is understanding what to measure. The GHG Protocol provides a framework that categorizes emissions into three "scopes," each representing different sources and levels of organizational control.

## The Three Scopes

### Scope 1: Direct Emissions

Scope 1 emissions are those directly produced by sources owned or controlled by the organization. For a city government, this typically includes:

- Emissions from city-owned vehicles (police cars, fire trucks, sanitation vehicles)
- Natural gas used in city-owned buildings
- Fugitive emissions from refrigerants in HVAC systems
- Any on-site fuel combustion

**Why it matters:** These emissions are under direct organizational control, making them the most straightforward to measure and reduce through operational changes.

### Scope 2: Indirect Emissions from Purchased Energy

Scope 2 covers emissions from the generation of purchased electricity, steam, heating, or cooling consumed by the organization. While the actual combustion happens at a power plant elsewhere, the organization is responsible because it purchases and uses that energy.

For public sector entities, this primarily means:

- Electricity purchased for government buildings
- District steam or chilled water (common in dense urban areas)

**Why it matters:** While these emissions occur off-site, they're a direct result of organizational energy consumption and can be significantly reduced through energy efficiency and renewable energy procurement.

### Scope 3: Other Indirect Emissions

Scope 3 is the broadest and often most challenging category. It includes all other indirect emissions that occur in an organization's value chain, including both upstream and downstream activities.

For government entities, relevant Scope 3 categories might include:

- Employee commuting
- Business travel
- Purchased goods and services
- Waste disposal
- Contracted services
- Construction activities

**Why it matters:** Scope 3 often represents the largest portion of an organization's carbon footprint, but it's also the most difficult to measure and influence.

## The Measurement Challenge

Accurately measuring emissions across all three scopes requires robust data systems and clear methodologies. Here's a simplified calculation framework:

$$
\\text{Total Emissions} = \\sum (\\text{Activity Data} \\times \\text{Emission Factor})
$$

For each emission source, you need:

1. **Activity data** - Quantitative measure of the activity (gallons of fuel, kWh of electricity, etc.)
2. **Emission factor** - The amount of GHG emitted per unit of activity

### Example Calculation

Let's calculate emissions from a city vehicle fleet:

```python
# Scope 1: Fleet emissions calculation

fleet_data = {
    'gasoline_vehicles': {
        'fuel_consumed_gallons': 50000,
        'emission_factor': 0.008887  # metric tons CO2e per gallon
    },
    'diesel_vehicles': {
        'fuel_consumed_gallons': 30000,
        'emission_factor': 0.010180  # metric tons CO2e per gallon
    }
}

def calculate_fleet_emissions(fleet_data):
    total_emissions = 0
    for vehicle_type, data in fleet_data.items():
        emissions = data['fuel_consumed_gallons'] * data['emission_factor']
        print(f"{vehicle_type}: {emissions:.2f} metric tons CO2e")
        total_emissions += emissions
    return total_emissions

total = calculate_fleet_emissions(fleet_data)
print(f"\\nTotal fleet emissions: {total:.2f} metric tons CO2e")
```

Output:
```
gasoline_vehicles: 444.35 metric tons CO2e
diesel_vehicles: 305.40 metric tons CO2e

Total fleet emissions: 749.75 metric tons CO2e
```

## Practical Challenges in Public Sector Accounting

Public sector organizations face unique challenges in GHG accounting:

1. **Data fragmentation** - Information may be spread across multiple departments with different systems
2. **Scope 3 complexity** - Government activities touch countless areas, making comprehensive Scope 3 accounting resource-intensive
3. **Consistency over time** - Maintaining consistent methodologies as operations and data systems evolve
4. **Comparability** - Balancing standardized approaches with the unique characteristics of different jurisdictions

## Moving Forward

Effective GHG accounting is foundational to climate action. While perfect precision is impossible, developing systematic approaches to measurement enables:

- **Baseline establishment** - Understanding current emissions levels
- **Target setting** - Creating informed, achievable reduction goals
- **Progress tracking** - Measuring the effectiveness of interventions
- **Transparency** - Communicating clearly with stakeholders and the public

As we continue to refine these methodologies, the goal remains clear: provide decision-makers with accurate, actionable information to drive meaningful emissions reductions.

---

*This post reflects general principles of GHG accounting. Specific methodologies may vary by jurisdiction and should be tailored to local circumstances and regulatory requirements.*
]]></content:encoded>
      <category>GHG accounting</category>
      <category>public sector</category>
      <category>climate policy</category>
      <category>sustainability</category>
    </item>

    <item>
      <title>Welcome to Public Presence</title>
      <link>https://publicpresence.org/blog/welcome-to-public-presence</link>
      <guid isPermaLink="true">https://publicpresence.org/blog/welcome-to-public-presence</guid>
      <pubDate>Wed, 15 Jan 2025 00:00:00 GMT</pubDate>
      <description>An introduction to this blog and its mission to explore sustainability science, public planning, policy, and public transportation.</description>
      <content:encoded><![CDATA[
# Welcome to Public Presence

Welcome to Public Presence, a space dedicated to exploring the intersection of sustainability science, public planning, policy, and public transportation. This blog represents my commitment to contributing to evidence-based discussions about building more sustainable and equitable public systems.

## What to Expect

Through this platform, I'll be sharing insights from my work in greenhouse gas accounting and public sector sustainability, discussing emerging research and best practices, and exploring the complex challenges facing our cities and transportation systems.

### Key Topics

The content here will focus on several interconnected themes:

1. **Greenhouse Gas Accounting** - Methodologies, challenges, and innovations in measuring and tracking emissions
2. **Public Transportation** - Policy, planning, and operations for sustainable transit systems
3. **Sustainability Science** - Research-driven approaches to environmental challenges
4. **Public Policy** - Evidence-based policy development for climate action
5. **Urban Planning** - Creating resilient, sustainable cities

## A Note on Approach

Throughout my career in public service, I've been committed to rigorous, data-driven approaches to sustainability challenges. This blog will reflect that commitment by grounding discussions in research, data, and practical experience.

## Math and Code

When needed, I'll include mathematical equations to explain concepts. For example, calculating emissions factors:

$$
E = A \\times EF
$$

Where:
- $E$ = Total emissions
- $A$ = Activity data
- $EF$ = Emission factor

I may also share code snippets and technical approaches:

```python
def calculate_emissions(activity_data, emission_factor):
    """
    Calculate total emissions from activity data and emission factor.
    
    Args:
        activity_data (float): Amount of activity (e.g., kWh, miles)
        emission_factor (float): Emissions per unit of activity
    
    Returns:
        float: Total emissions
    """
    return activity_data * emission_factor

# Example usage
electricity_kwh = 10000
ef_electricity = 0.000744  # metric tons CO2e per kWh (US grid average)
emissions = calculate_emissions(electricity_kwh, ef_electricity)
print(f"Total emissions: {emissions:.2f} metric tons CO2e")
```

## Moving Forward

I'm excited to use this platform to contribute to important conversations about sustainability, equity, and public service. The views expressed here are my own and don't necessarily reflect those of my employer or any other organization.

Thank you for reading, and I look forward to sharing more insights in future posts.

---

*Have thoughts or questions? Feel free to reach out through the channels listed on the [About](/about) page.*
]]></content:encoded>
      <category>introduction</category>
      <category>sustainability</category>
      <category>public sector</category>
    </item>
  </channel>
</rss>